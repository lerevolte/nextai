<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–ß–∞—Ç-–±–æ—Ç –∫–æ–Ω–Ω–µ–∫—Ç–æ—Ä</title>
    <script src="//api.bitrix24.com/api/v1/"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
            background: #f5f7fa;
            padding: 20px;
        }
        
        .container {
            max-width: 900px;
            margin: 0 auto;
        }
        
        .header {
            background: white;
            padding: 20px;
            border-radius: 12px;
            margin-bottom: 20px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        }
        
        .header h1 {
            font-size: 24px;
            color: #333;
            margin-bottom: 8px;
        }
        
        .header p {
            color: #666;
            font-size: 14px;
        }
        
        .section {
            background: white;
            padding: 20px;
            border-radius: 12px;
            margin-bottom: 20px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        }
        
        .section h2 {
            font-size: 18px;
            color: #333;
            margin-bottom: 16px;
            padding-bottom: 12px;
            border-bottom: 1px solid #e5e7eb;
        }
        
        .bot-list {
            display: grid;
            gap: 12px;
        }
        
        .bot-card {
            border: 1px solid #e5e7eb;
            border-radius: 8px;
            padding: 16px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            transition: all 0.2s;
        }
        
        .bot-card:hover {
            background: #f9fafb;
            border-color: #6366f1;
        }
        
        .bot-info {
            flex: 1;
        }
        
        .bot-name {
            font-weight: 600;
            color: #333;
            margin-bottom: 4px;
        }
        
        .bot-status {
            font-size: 12px;
            color: #666;
        }
        
        .bot-status.registered {
            color: #10b981;
        }
        
        .bot-status.not-registered {
            color: #f59e0b;
        }
        
        .bot-actions {
            display: flex;
            gap: 8px;
        }
        
        .btn {
            padding: 8px 16px;
            border: none;
            border-radius: 6px;
            font-size: 14px;
            cursor: pointer;
            transition: all 0.2s;
            text-decoration: none;
            display: inline-block;
        }
        
        .btn-primary {
            background: #6366f1;
            color: white;
        }
        
        .btn-primary:hover {
            background: #4f46e5;
        }
        
        .btn-secondary {
            background: #f3f4f6;
            color: #374151;
        }
        
        .btn-secondary:hover {
            background: #e5e7eb;
        }
        
        .btn-danger {
            background: #ef4444;
            color: white;
        }
        
        .btn-danger:hover {
            background: #dc2626;
        }
        
        .btn:disabled {
            opacity: 0.5;
            cursor: not-allowed;
        }
        
        .alert {
            padding: 12px 16px;
            border-radius: 8px;
            margin-bottom: 16px;
        }
        
        .alert-info {
            background: #dbeafe;
            color: #1e40af;
            border: 1px solid #93c5fd;
        }
        
        .alert-success {
            background: #dcfce7;
            color: #166534;
            border: 1px solid #86efac;
        }
        
        .alert-warning {
            background: #fef3c7;
            color: #92400e;
            border: 1px solid #fde68a;
        }
        
        .empty-state {
            text-align: center;
            padding: 40px;
            color: #666;
        }
        
        .empty-state svg {
            width: 64px;
            height: 64px;
            margin: 0 auto 16px;
            opacity: 0.3;
        }
        
        .spinner {
            display: inline-block;
            width: 16px;
            height: 16px;
            border: 2px solid rgba(0,0,0,0.1);
            border-top-color: #6366f1;
            border-radius: 50%;
            animation: spin 0.6s linear infinite;
        }
        
        @keyframes spin {
            to { transform: rotate(360deg); }
        }
        
        .connector-status {
            display: inline-flex;
            align-items: center;
            gap: 8px;
            padding: 4px 12px;
            background: #f3f4f6;
            border-radius: 100px;
            font-size: 12px;
        }
        
        .connector-status.active {
            background: #dcfce7;
            color: #166534;
        }
        
        .status-dot {
            width: 8px;
            height: 8px;
            border-radius: 50%;
            background: #9ca3af;
        }
        
        .status-dot.active {
            background: #10b981;
            animation: pulse 2s infinite;
        }
        
        @keyframes pulse {
            0%, 100% { opacity: 1; }
            50% { opacity: 0.5; }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>ü§ñ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —á–∞—Ç-–±–æ—Ç–∞–º–∏</h1>
            <p>–ü–æ–¥–∫–ª—é—á–∏—Ç–µ –±–æ—Ç–æ–≤ –∫ –æ—Ç–∫—Ä—ã—Ç—ã–º –ª–∏–Ω–∏—è–º –ë–∏—Ç—Ä–∏–∫—Å24</p>
        </div>
        
        <div class="section">
            <h2>–î–æ—Å—Ç—É–ø–Ω—ã–µ –±–æ—Ç—ã</h2>
            
            @if($bots->count() > 0)
                <div class="bot-list">
                    @foreach($bots as $bot)
                        @php
                            $isRegistered = $bot->metadata['bitrix24_connector_registered'] ?? false;
                            $connector = collect($connectors)->firstWhere('bot_id', $bot->id);
                        @endphp
                        
                        <div class="bot-card">
                            <div class="bot-info">
                                <div class="bot-name">{{ $bot->name }}</div>
                                @if($isRegistered)
                                    <div class="bot-status registered">
                                        ‚úÖ –ö–æ–Ω–Ω–µ–∫—Ç–æ—Ä –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω
                                    </div>
                                    @if($connector && $connector['active'])
                                        <div class="connector-status active" style="margin-top: 8px;">
                                            <span class="status-dot active"></span>
                                            –ü–æ–¥–∫–ª—é—á–µ–Ω –∫ –ª–∏–Ω–∏–∏ #{{ $connector['line_id'] }}
                                        </div>
                                    @endif
                                @else
                                    <div class="bot-status not-registered">
                                        ‚ö†Ô∏è –ö–æ–Ω–Ω–µ–∫—Ç–æ—Ä –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω
                                    </div>
                                @endif
                            </div>
                            
                            <div class="bot-actions">
                                @if(!$isRegistered)
                                    <button class="btn btn-primary" onclick="registerConnector('{{ $bot->id }}')">
                                        –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å
                                    </button>
                                @else
                                    @if(!$connector || !$connector['active'])
                                        <button class="btn btn-secondary" onclick="showInstructions('{{ $bot->id }}', '{{ $bot->name }}')">
                                            üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è
                                        </button>
                                    @endif
                                    <button class="btn btn-danger" onclick="unregisterConnector('{{ $bot->id }}')">
                                        –£–¥–∞–ª–∏—Ç—å
                                    </button>
                                @endif
                            </div>
                        </div>
                    @endforeach
                </div>
            @else
                <div class="empty-state">
                    <svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 13V6a2 2 0 00-2-2H6a2 2 0 00-2 2v7m16 0v5a2 2 0 01-2 2H6a2 2 0 01-2-2v-5m16 0h-2.586a1 1 0 00-.707.293l-2.414 2.414a1 1 0 01-.707.293h-3.172a1 1 0 01-.707-.293l-2.414-2.414A1 1 0 006.586 13H4"></path>
                    </svg>
                    <p>–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –±–æ—Ç–æ–≤</p>
                    <p style="font-size: 14px; margin-top: 8px;">–°–æ–∑–¥–∞–π—Ç–µ –±–æ—Ç–∞ –≤ –ø–∞–Ω–µ–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è</p>
                </div>
            @endif
        </div>
        
        <div class="section">
            <h2>–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—é</h2>
            <ol style="padding-left:20px;line-height: 1.8; color: #4b5563;">
                <li>–ù–∞–∂–º–∏—Ç–µ "–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å" –¥–ª—è –Ω—É–∂–Ω–æ–≥–æ –±–æ—Ç–∞</li>
                <li>–ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ <strong>CRM ‚Üí –ö–æ–Ω—Ç–∞–∫—Ç-—Ü–µ–Ω—Ç—Ä</strong></li>
                <li>–ù–∞–π–¥–∏—Ç–µ –±–ª–æ–∫ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –≤–∞—à–µ–≥–æ –±–æ—Ç–∞</li>
                <li>–ù–∞–∂–º–∏—Ç–µ "–ü–æ–¥–∫–ª—é—á–∏—Ç—å" –∏ –≤—ã–±–µ—Ä–∏—Ç–µ –æ—Ç–∫—Ä—ã—Ç—É—é –ª–∏–Ω–∏—é</li>
                <li>–ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –±–æ—Ç–∞ –±—É–¥—É—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –≤ –æ—Ç–∫—Ä—ã—Ç—É—é –ª–∏–Ω–∏—é</li>
            </ol>
        </div>
        
        <div id="instructions-modal" style="display: none; position: fixed; top: 0; left: 0; right: 0; bottom: 0; background: rgba(0,0,0,0.5); z-index: 1000;">
            <div style="background: white; margin: 50px auto; max-width: 500px; padding: 24px; border-radius: 12px;">
                <h3 style="margin-bottom: 16px;">–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –±–æ—Ç–∞ "<span id="bot-name"></span>"</h3>
                <div class="alert alert-info">
                    –ö–æ–Ω–Ω–µ–∫—Ç–æ—Ä –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω! –¢–µ–ø–µ—Ä—å –Ω—É–∂–Ω–æ –ø–æ–¥–∫–ª—é—á–∏—Ç—å –µ–≥–æ –≤ –ë–∏—Ç—Ä–∏–∫—Å24:
                </div>
                <ol style="padding-left:20px;line-height: 1.8; color: #4b5563;">
                    <li>–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ <strong>CRM ‚Üí –ö–æ–Ω—Ç–∞–∫—Ç-—Ü–µ–Ω—Ç—Ä</strong></li>
                    <li>–ù–∞–π–¥–∏—Ç–µ –±–ª–æ–∫ "<span id="bot-name-2"></span>"</li>
                    <li>–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ü–æ–¥–∫–ª—é—á–∏—Ç—å"</li>
                    <li>–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é –æ—Ç–∫—Ä—ã—Ç—É—é –ª–∏–Ω–∏—é</li>
                </ol>
                <div style="margin-top: 20px; text-align: right;">
                    <button class="btn btn-primary" onclick="closeInstructions()">–ü–æ–Ω—è—Ç–Ω–æ</button>
                </div>
            </div>
        </div>
    </div>
    
    <script>
        BX24.init(function(){
            console.log('Bitrix24 JS API initialized');
        });
        
        function registerConnector(botId) {
            const button = event.target;
            button.disabled = true;
            button.innerHTML = '<span class="spinner"></span> –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è...';
            
            fetch('/bitrix24/register-connector', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    bot_id: botId,
                    domain: '{{ $domain }}',
                    auth_id: '{{ $authId }}'
                })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert('‚úÖ ' + data.message);
                    //location.reload();
                    button.innerHTML = '‚úÖ –ì–æ—Ç–æ–≤–æ';
                } else {
                    alert('‚ùå –û—à–∏–±–∫–∞: ' + (data.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'));
                    button.disabled = false;
                    button.innerHTML = '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å';
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∫–æ–Ω–Ω–µ–∫—Ç–æ—Ä–∞');
                button.disabled = false;
                button.innerHTML = '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å';
            });
        }
        
        function unregisterConnector(botId) {
            if (!confirm('–£–¥–∞–ª–∏—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∫–æ–Ω–Ω–µ–∫—Ç–æ—Ä–∞? –í—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –±—É–¥—É—Ç —Ä–∞–∑–æ—Ä–≤–∞–Ω—ã.')) {
                return;
            }
            
            const button = event.target;
            button.disabled = true;
            button.innerHTML = '<span class="spinner"></span> –£–¥–∞–ª–µ–Ω–∏–µ...';

            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
            fetch('/bitrix24/unregister-connector', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    bot_id: botId,
                    domain: '{{ $domain }}',
                    auth_id: '{{ $authId }}'
                })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert('‚úÖ ' + data.message);
                    location.reload(); // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è
                } else {
                    alert('‚ùå –û—à–∏–±–∫–∞: ' + (data.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'));
                    button.disabled = false;
                    button.innerHTML = '–£–¥–∞–ª–∏—Ç—å';
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞');
                button.disabled = false;
                button.innerHTML = '–£–¥–∞–ª–∏—Ç—å';
            });
        }
        
        function showInstructions(botId, botName) {
            document.getElementById('bot-name').textContent = botName;
            document.getElementById('bot-name-2').textContent = botName;
            document.getElementById('instructions-modal').style.display = 'block';
        }
        
        function closeInstructions() {
            document.getElementById('instructions-modal').style.display = 'none';
        }
    </script>
</body>
</html>